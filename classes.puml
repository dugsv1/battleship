@startuml

class Gamecontroller {
    + state: object
    --
    + sendAttack(x: int, y: int): void
    + processResults(): void
}

class Gameboard {
    --
    + receiveAttack(x: int, y: int): void
    + recordCoordinates(x: int, y: int): void
    + allSunk(): bool
    + attackProcessed(hit: bool, allSunk: bool): void
    }

class Ship {
    - length: int
    - damage: int
    - sunk: bool
    --
    + hit(): void
    + isSunk(): bool
}

class Player {
    - real: bool
    - gameboard: Gameboard
    --
    + attack(x: int, y: int): void
}

class Domcontroller {
    --
    + updateView(state: object): void
}

Gamecontroller -d-> Gameboard
Gamecontroller --> Player
Gamecontroller --> Domcontroller
Gameboard "1" *-- "*" Ship
Player o-- Gameboard
Domcontroller <-- Gameboard : listens for updates

@enduml